[{"/home/craft_student/craft/open_weater_app/src/App.jsx":"1","/home/craft_student/craft/open_weater_app/src/index.js":"2","/home/craft_student/craft/open_weater_app/src/reportWebVitals.js":"3","/home/craft_student/craft/open_weater_app/src/components/Showcaser.jsx":"4","/home/craft_student/craft/open_weater_app/src/components/DailyForecast.jsx":"5"},{"size":3593,"mtime":1612632032236,"results":"6","hashOfConfig":"7"},{"size":287,"mtime":1612367729778,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612347649397,"results":"9","hashOfConfig":"7"},{"size":1534,"mtime":1612632532917,"results":"10","hashOfConfig":"7"},{"size":1319,"mtime":1612632588429,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"ecdbx6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/craft_student/craft/open_weater_app/src/App.jsx",["25"],"import React from 'react'\nimport axios from 'axios'\nimport { Header, Button, Grid, Tab } from 'semantic-ui-react'\nimport { Line } from 'react-chartjs-2'\nimport Showcaser from './components/Showcaser'\nimport DailyForecast from './components/DailyForecast'\n\nclass App extends React.Component {\n  state = {\n    weatherInfo: {}\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(async pos => {\n      // this.setState({ location: response.coords })\n      let { latitude, longitude } = pos.coords\n      const locationResponse = await axios.get(`https://api.opencagedata.com/geocode/v1/json?key=752ad146959d4bc2a0b83bc4aab0ec9a&q=${latitude}+${longitude}`)\n      const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=5091ea391e19fef677e0e8307edbf904&units=metric`)\n\n      this.setState({ dailyTemp: weatherResponse.data.daily })\n      const weatherInfo = {\n        location: locationResponse.data.results[0].components.city ? locationResponse.data.results[0].components.city : locationResponse.data.results[0].components.postal_city,\n        temperature: weatherResponse.data.current.temp,\n        weather: weatherResponse.data.current.weather\n      }\n      this.setState({ weatherInfo: weatherInfo })\n\n    })\n  }\n  clickHandlerImg() {\n    document.getElementById('root').style.backgroundImage = 'url(\"https://images.unsplash.com/reserve/Af0sF2OS5S5gatqrKzVP_Silhoutte.jpg?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\")'\n    document.getElementsByClassName('sun')[0].innerHTML = \"That's better!\"\n  }\n\n  render() {\n    const { weatherInfo, dailyTemp } = this.state;\n\n    const panes = [\n      {\n        menuItem: 'Daily Temp',\n        render: () => <Tab.Pane attached={false}>\n          {dailyTemp && <Line\n            data={data}\n            width={500}\n            height={250}\n            options={{ maintainAspectRatio: false }}\n          />}\n        </Tab.Pane>,\n      },\n      {\n        menuItem: '5-Day Forecast',\n        render: () => <Tab.Pane attached={false}>\n          <DailyForecast dailyTemp={dailyTemp} />\n        </Tab.Pane>,\n      },\n    ]\n\n    let labels = []\n    let dataItems = []\n    let dataItems2 = []\n    let data\n    if (dailyTemp) {\n      dailyTemp.forEach(day => {\n        labels.push(new Date(day.dt * 1000).toLocaleDateString('sv'))\n        dataItems.push(day.temp.day)\n        dataItems2.push(day.feels_like.day)\n      })\n      data = {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Daily Temperature',\n            data: dataItems,\n            borderColor: '#B55DFF',\n            backgroundColor: '#32C5CE',\n          },\n          {\n            label: 'Daily Feels Like',\n            data: dataItems2,\n            borderColor: '#B55DFF',\n            backgroundColor: '#5883AB',\n          }\n        ]\n      }\n    }\n    // new Date(dailyTemp[0].dt * 1000).toLocaleDateString('sv')\n\n    return (\n      <div className=\"main-container\" data-cy=\"weather-display\">\n        <Header color=\"yellow\" size=\"huge\" textAlign=\"center\">Your Weather Forecast</Header>\n\n        <Showcaser weatherInfo={weatherInfo}>\n          <Tab menu={{ pointing: true }} panes={panes} />\n\n        </Showcaser>\n\n        <Grid>\n          <Grid.Row textAlign=\"center\" centered>\n            {/* <Button className=\"sun\" color=\"yellow\" onClick={() => this.clickHandlerImg()}>\n              Don't like what you see?\n            </Button> */}\n\n          </Grid.Row>\n\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;","/home/craft_student/craft/open_weater_app/src/index.js",[],["26","27"],"/home/craft_student/craft/open_weater_app/src/reportWebVitals.js",[],["28","29"],"/home/craft_student/craft/open_weater_app/src/components/Showcaser.jsx",[],"/home/craft_student/craft/open_weater_app/src/components/DailyForecast.jsx",[],{"ruleId":"30","severity":1,"message":"31","line":3,"column":18,"nodeType":"32","messageId":"33","endLine":3,"endColumn":24},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-global-assign","no-unsafe-negation"]